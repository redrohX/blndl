/*! normalize.css v4.1.1 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Prevent adjustments of font size after orientation changes in IE and iOS.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 * 2. Add the correct display in IE.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
main,
menu,
nav,
section,
summary {
  /* 1 */
  display: block; }

/**
 * Add the correct display in IE 9-.
 */
audio,
canvas,
progress,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  vertical-align: baseline; }

/**
 * Add the correct display in IE 10-.
 * 1. Add the correct display in IE.
 */
template,
[hidden] {
  display: none; }

/* Links
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/* Forms
   ========================================================================== */
/**
 * 1. Change font properties to `inherit` in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font: inherit;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Restore the font weight unset by the previous rule.
 */
optgroup {
  font-weight: bold; }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Correct the text style of placeholders in Chrome, Edge, and Safari.
 */
::-webkit-input-placeholder {
  color: inherit;
  opacity: 0.54; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

html {
  box-sizing: border-box; }

* {
  box-sizing: inherit; }
  *:before, *:after {
    box-sizing: inherit; }

body {
  padding: 12px 6px;
  background: #f4f4f4;
  font-size: 14px; }

ul, ol {
  list-style: none;
  margin: 0;
  padding: 0; }

p {
  margin: 0;
  padding: 0; }

h1, h2, h3, h4, h5, h6 {
  margin: 0; }

.lightbox-overlay {
  visibility: hidden;
  opacity: 0;
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  margin: 0 auto;
  background: rgba(0, 0, 0, 0.8);
  text-align: center;
  overflow: hidden;
  cursor: pointer; }
  .lightbox-overlay.is-active {
    visibility: visible;
    opacity: 1; }
    .lightbox-overlay.is-active .lightbox-image-wrapper {
      transition: opacity .3s, visibility .3s; }
  .lightbox-overlay .lightbox-image-wrapper {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    padding: 10%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    transition: opacity .3s, visibility .3s; }
  .lightbox-overlay .lightbox-image-positioner {
    position: relative;
    visibility: hidden;
    opacity: 0;
    transition: opacity .1s, visibility .4s; }
    .lightbox-overlay .lightbox-image-positioner.is-active {
      visibility: visible;
      opacity: 1;
      transition: opacity .4s, visibility .1s; }
  .lightbox-overlay .lightbox-overlay-img {
    width: 100%;
    border: 5px solid #fff; }
  .lightbox-overlay .lightbox-close {
    position: absolute;
    right: 0;
    top: 0;
    min-width: 48px;
    padding: 15px 10px;
    background: url(../img/close.svg) #fff no-repeat 50% 50%;
    background-size: 30%;
    cursor: pointer;
    text-indent: -9999em; }

.comments-container {
  margin: 0 5px;
  background: #fff;
  border-radius: 2px;
  box-shadow: 0 1px 2px 0 rgba(0, 0, 0, 0.07);
  overflow: hidden; }

.comments-box-avatars-container {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  padding: 8px; }

.comments-box-category-label-container {
  display: inline-block;
  padding: 2px 4px;
  margin: 0 10px 0 0;
  max-height: 20px;
  font-size: 12px;
  border-radius: 2px;
  color: #1B1F2D;
  border: 1px solid rgba(52, 60, 89, 0.5); }
  .comments-box-category-label-container .comments-box-category-label {
    position: relative; }
    .comments-box-category-label-container .comments-box-category-label:after {
      position: absolute;
      bottom: -17px;
      left: 0;
      width: 100%;
      content: '';
      border-bottom: 2px solid #343C59; }

.comments-box-avatars {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex; }

.comments-box-avatar-item {
  position: relative;
  margin: 0 5px 0 0;
  opacity: 0; }
  .is-loaded .comments-box-avatar-item:nth-child(0) {
    opacity: 1;
    transition: opacity 1s 0s; }
  .is-loaded .comments-box-avatar-item:nth-child(1) {
    opacity: 1;
    transition: opacity 1s 0.3s; }
  .is-loaded .comments-box-avatar-item:nth-child(2) {
    opacity: 1;
    transition: opacity 1s 0.6s; }
  .is-loaded .comments-box-avatar-item:nth-child(3) {
    opacity: 1;
    transition: opacity 1s 0.9s; }

.comments-box-avatar-img-container {
  overflow: hidden;
  border-radius: 2px; }

.comments-box-avatar-img-container.is-active {
  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.5); }

.comments-box-avatar-img {
  display: block; }

.comments-box-avatar-badge {
  display: none;
  position: absolute;
  right: -2px;
  bottom: -2px;
  width: 7px;
  height: 7px;
  border: 1px solid #fff;
  background: #F64F2C;
  border-radius: 50%; }

.comments-box-avatar-badge.is-visible {
  display: block; }

.comments-box-heart-container {
  margin: auto 5px auto auto; }

.comments-box-heart {
  opacity: 0; }
  .is-loaded .comments-box-heart {
    opacity: 1;
    -webkit-animation: heartbeat .4s .3s 10 alternate;
            animation: heartbeat .4s .3s 10 alternate;
    -webkit-transform-origin: center;
        -ms-transform-origin: center;
            transform-origin: center;
    transition: opacity .3s; }

@-webkit-keyframes heartbeat {
  to {
    -webkit-transform: scale(1.2);
            transform: scale(1.2); } }

@keyframes heartbeat {
  to {
    -webkit-transform: scale(1.2);
            transform: scale(1.2); } }

.comments-box-heart-amount {
  padding-left: 2px;
  font-size: 13px; }

.comments-text-container {
  padding: 8px;
  border-top: 2px solid #f4f4f4; }

.comments-text {
  padding: 2px 0 0;
  opacity: 0; }
  .is-loaded .comments-text {
    opacity: 1;
    transition: opacity 1s 1s; }

.comments-text-name {
  padding: 5px 0;
  color: #948784;
  font-size: 13px;
  -webkit-font-smoothing: antialiased;
  opacity: 0; }
  .is-loaded .comments-text-name {
    opacity: 1;
    transition: opacity 1s 1.5s; }

.article-card {
  margin: 0 auto;
  max-width: 600px; }

.article-snippet-container {
  padding-bottom: 20px;
  background: #fff;
  border-radius: 2px;
  box-shadow: 0 -1px 4px 0 rgba(0, 0, 0, 0.09);
  cursor: pointer; }

.article-snippet-header {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center; }

.article-snippet-logo-container {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-align-items: center;
      -ms-flex-align: center;
          align-items: center;
  width: 100%;
  padding: 5px 10px; }

.article-snippet-logo {
  margin-right: auto; }

.article-snippet-price {
  font-size: 13px;
  color: #948784;
  -webkit-font-smoothing: antialiased; }

.article-snippet-more {
  padding: 0 10px;
  height: 44px;
  background: #fff;
  border: 0;
  border-left: 1px solid #DBDBDB;
  cursor: pointer; }
  .article-snippet-more:hover .article-snippet-more-image-circles,
  .article-snippet-more:active .article-snippet-more-image-circles {
    fill: #F64F2C; }

.article-snippet-more-image {
  margin-bottom: 3px; }

.article-snippet-more-image-circles {
  fill: #948784; }

.article-snippet-photo {
  width: 100%; }

.article-snippet-heading {
  padding: 15px;
  font-weight: 700;
  font-size: 24px;
  text-transform: uppercase;
  line-height: 1;
  color: #CE242D;
  -webkit-font-smoothing: antialiased; }
  .fonts-loaded .article-snippet-heading {
    font-family: "Source Sans Pro", sans-serif; }

.article-snippet-subheading {
  padding: 0 15px;
  font-weight: 900;
  font-size: 50px;
  text-transform: uppercase;
  line-height: 1;
  color: #000;
  -webkit-font-smoothing: antialiased; }
  .fonts-loaded .article-snippet-subheading {
    font-family: "Source Sans Pro", sans-serif; }

.article-snippet-paragraph-container {
  position: relative;
  padding: 15px;
  max-height: 135px;
  overflow: hidden;
  font-weight: 500;
  font-size: 24px;
  line-height: 1;
  color: #000;
  -webkit-font-smoothing: antialiased; }
  .fonts-loaded .article-snippet-paragraph-container {
    font-family: "Alegreya Sans", sans-serif; }

.article-snippet-paragraph-overlay {
  position: absolute;
  top: 25px;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(to bottom, rgba(255, 255, 255, 0) 0%, white 100%); }

body.no-scroll {
  overflow: hidden; }

.article-reader {
  position: fixed;
  overflow-y: scroll;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: #fff;
  visibility: hidden;
  opacity: 0;
  -webkit-transform: scale(0.75);
      -ms-transform: scale(0.75);
          transform: scale(0.75);
  transition: opacity .2s, visibility 0s .2s, -webkit-transform .2s;
  transition: transform .2s, opacity .2s, visibility 0s .2s;
  transition: transform .2s, opacity .2s, visibility 0s .2s, -webkit-transform .2s; }

.article-reader.is-visible {
  visibility: visible;
  opacity: 1;
  -webkit-transform: scale(1);
      -ms-transform: scale(1);
          transform: scale(1);
  transition: opacity .4s, -webkit-transform .4s;
  transition: transform .4s, opacity .4s;
  transition: transform .4s, opacity .4s, -webkit-transform .4s; }

.article-reader.no-scroll {
  overflow: hidden; }

.article-reader-logo-container {
  margin: 5px;
  position: absolute;
  left: 50%;
  right: 50%;
  margin-left: -55px;
  margin-right: -55px; }

.article-reader-logo {
  display: block; }

.article-reader-logo-info {
  margin-top: -5px;
  padding: 5px;
  border-bottom-left-radius: 5px;
  border-bottom-right-radius: 5px;
  color: #948784;
  font-size: 11px;
  font-weight: 300;
  text-align: center;
  text-transform: lowercase;
  background: #fff;
  -webkit-font-smoothing: antialiased; }
  .fonts-loaded .article-reader-logo-info {
    font-family: "Lato", sans-serif; }

.article-reader-header {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-content: center;
      -ms-flex-line-pack: center;
          align-content: center;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; }

.article-reader-options-container {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-content: center;
      -ms-flex-line-pack: center;
          align-content: center;
  -webkit-justify-content: space-between;
      -ms-flex-pack: justify;
          justify-content: space-between;
  -webkit-flex-wrap: wrap;
      -ms-flex-wrap: wrap;
          flex-wrap: wrap;
  width: 100%;
  border-bottom: 1px solid #EAEAEA; }
  @media (min-width: 690px) {
    .article-reader-options-container {
      border-bottom: 0; } }

.article-reader-options {
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-content: center;
      -ms-flex-line-pack: center;
          align-content: center; }

.article-reader-options-item {
  -webkit-align-self: center;
      -ms-flex-item-align: center;
          align-self: center;
  padding: 15px;
  min-width: 48px;
  min-height: 44px;
  background-size: 30%; }
  .article-reader-options-item:not(:nth-child(n+3)) {
    border-right: 1px solid #EAEAEA; }

.article-reader-options-item.close-button {
  background: url(../img/close.svg) no-repeat 50% 50%; }

.article-reader-options-item.pin-button {
  background: url(../img/pin.svg) no-repeat 50% 50%; }

.article-reader-options-item.more-button {
  display: none;
  background: url(../img/more.svg) no-repeat 50% 50%; }
  @media (min-width: 799px) {
    .article-reader-options-item.more-button {
      display: block; } }

.article-reader-options-item.close-button {
  cursor: pointer; }

.article-reader-options-item-close-button {
  border: 0;
  background: #fff;
  cursor: pointer; }

.refund-link {
  display: none;
  margin-right: auto;
  -webkit-align-self: center;
      -ms-flex-item-align: center;
          align-self: center;
  padding: 15px;
  text-align: center;
  font-size: 13px;
  color: #948784;
  -webkit-font-smoothing: antialiased; }
  .fonts-loaded .refund-link {
    font-family: "Lato", sans-serif; }
  @media (min-width: 799px) {
    .refund-link {
      display: block; } }

.refund-link-bold {
  font-weight: 700; }

.article-reader-photo {
  width: 100%; }

.article-reader-heading {
  padding: 15px 20px;
  font-weight: 700;
  font-size: 24px;
  text-transform: uppercase;
  line-height: 1.07;
  color: #CE242D;
  -webkit-font-smoothing: antialiased; }
  .fonts-loaded .article-reader-heading {
    font-family: "Source Sans Pro", sans-serif; }
  @media (min-width: 690px) {
    .article-reader-heading {
      padding: 0;
      margin: 70px auto 0;
      max-width: 600px;
      font-size: 28px; } }

.article-reader-subheading {
  padding: 0 15px;
  font-weight: 900;
  font-size: 50px;
  text-transform: uppercase;
  line-height: 1;
  color: #000;
  -webkit-font-smoothing: antialiased; }
  .fonts-loaded .article-reader-subheading {
    font-family: "Source Sans Pro", sans-serif; }
  @media (min-width: 690px) {
    .article-reader-subheading {
      padding: 0;
      margin: 5px auto 12px;
      max-width: 600px;
      font-size: 64px; } }

.article-reader-paragraph-container {
  padding: 15px; }
  @media (min-width: 690px) {
    .article-reader-paragraph-container {
      padding: 0;
      margin: 0 auto;
      max-width: 600px;
      font-size: 64px; } }

.article-reader-heading-paragraph {
  padding: 15px 0;
  font-weight: 500;
  font-size: 26px;
  line-height: 1.15;
  color: #000;
  -webkit-font-smoothing: antialiased; }
  .fonts-loaded .article-reader-heading-paragraph {
    font-family: "Alegreya Sans", sans-serif; }
  @media (min-width: 690px) {
    .article-reader-heading-paragraph {
      padding: 0;
      margin: 25px auto 45px; } }

.article-reader-author {
  margin: 5px 0;
  font-size: 18px;
  font-weight: 800;
  -webkit-font-smoothing: antialiased; }
  .fonts-loaded .article-reader-author {
    font-family: "Alegreya Sans", sans-serif; }

.article-reader-paragraph {
  margin: 0 0 40px;
  font-size: 21px;
  line-height: 1.42;
  color: #333;
  -webkit-font-smoothing: antialiased; }
  .fonts-loaded .article-reader-paragraph {
    font-family: "Crimson Text", serif; }

.article-reader-paragraph + .article-reader-paragraph {
  margin: 0 0 20px; }

.article-reader-smallheading {
  font-size: 22px;
  color: #CE242D;
  -webkit-font-smoothing: antialiased; }
  .fonts-loaded .article-reader-smallheading {
    font-family: "Alegreya Sans", sans-serif; }

.article-reader-paragraph-image {
  display: block;
  margin: 25px 0 0;
  width: 100%;
  height: 100%;
  cursor: pointer; }

/* Styles the lightbox, removes it from sight and adds the fade-in transition */
.lightbox-target {
  position: fixed;
  top: -100%;
  left: 0;
  width: 100%;
  background: rgba(0, 0, 0, 0.7);
  width: 100%;
  opacity: 0;
  transition: opacity .5s ease-in-out;
  overflow: hidden; }

/* Styles the lightbox image, centers it vertically and horizontally, adds the zoom-in transition and makes it responsive using a combination of margin and absolute positioning */
.lightbox-target img {
  margin: auto;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  max-height: 0%;
  max-width: 0%;
  border: 3px solid white;
  box-shadow: 0px 0px 8px rgba(0, 0, 0, 0.3);
  box-sizing: border-box;
  transition: .5s ease-in-out; }

/* Styles the close link, adds the slide down transition */
a.lightbox-close {
  display: block;
  width: 50px;
  height: 50px;
  box-sizing: border-box;
  background: white;
  color: black;
  text-decoration: none;
  position: absolute;
  top: -80px;
  right: 0;
  transition: .5s ease-in-out; }

/* Provides part of the "X" to eliminate an image from the close link */
a.lightbox-close:before {
  content: "";
  display: block;
  height: 30px;
  width: 1px;
  background: black;
  position: absolute;
  left: 26px;
  top: 10px;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
      transform: rotate(45deg); }

/* Provides part of the "X" to eliminate an image from the close link */
a.lightbox-close:after {
  content: "";
  display: block;
  height: 30px;
  width: 1px;
  background: black;
  position: absolute;
  left: 26px;
  top: 10px;
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
      transform: rotate(-45deg); }

/* Uses the :target pseudo-class to perform the animations upon clicking the .lightbox-target anchor */
.lightbox-target:target {
  opacity: 1;
  top: 0;
  bottom: 0; }

.lightbox-target:target img {
  max-height: 100%;
  max-width: 100%; }

.lightbox-target:target a.lightbox-close {
  top: 0px; }

.article-share-options {
  display: none;
  -webkit-align-content: center;
      -ms-flex-line-pack: center;
          align-content: center; }
  @media (min-width: 690px) {
    .article-share-options {
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex; } }

.article-share-options-item {
  -webkit-align-self: center;
      -ms-flex-item-align: center;
          align-self: center;
  padding: 15px;
  min-width: 48px;
  min-height: 44px;
  background-size: 30%;
  cursor: pointer; }
  .article-share-options-item:first-child {
    border-left: 1px solid #EAEAEA; }
  .article-share-options-item:not(:last-child) {
    border-right: 1px solid #EAEAEA; }
  .article-share-options-item.share-blendle {
    background: url("../img/share-blendle.svg") no-repeat 50% 50%; }
  .article-share-options-item.share-linkedin {
    background: url("../img/share-linkedin.svg") no-repeat 50% 50%; }
  .article-share-options-item.share-facebook {
    background: url("../img/share-facebook.svg") no-repeat 50% 50%; }
  .article-share-options-item.share-twitter {
    background: url("../img/share-twitter.svg") no-repeat 50% 50%; }
  .article-share-options-item.share-mail {
    background: url("../img/share-mail.svg") no-repeat 50% 50%; }

/*# sourceMappingURL=data:application/json;base64, */
